add modules to scrape edmunds.com - refactor if needed

 - if refactoring, then store price data in "Drift" objects
 - each "Drift" object contains all the raw data for that car
 - also stores a list of trims for that car, has functions for scraping cleaning writing and calculating data
 - the "Drift" objects will just be stored in a dictionary, with the object as the value and key being the car make and model

add a "fudge factor" to the exponential decay on mileage to account for model years - start with a linear function

car edge - useful life of 12 years - try implmenting this to compare price paid against useful life left
google says cars are designed to last 200k miles ish, so also try that.

add all major city codes in USA

to make main.py callable from terminal, redo the environment with a TOML file

fix unit test coverage lol

mongodb integration? not really sure what this would be good for tho tbh